{"version":3,"file":"static/js/366.99d3e95b.chunk.js","mappings":"4KAmDA,QA9CA,WACE,MAAM,MAAEA,IAAUC,EAAAA,EAAAA,GAAQ,aACpBC,GAAWC,EAAAA,EAAAA,UAyCjB,OAvCAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAY,CAChBC,SAAU,CACRC,SAAU,CAAEC,MAAO,IAAIC,EAAAA,MAAY,aAErCC,aAAe,gLAOfC,eAAiB,8ZAWjBC,aAAa,GAGfZ,EAAMa,UAAUC,IACVA,EAAMC,SACRD,EAAME,SAAW,IAAIP,EAAAA,eAAqBJ,GAC5C,GACA,GACD,CAACL,KAEJiB,EAAAA,EAAAA,IAAS,KACHf,EAASgB,UACXhB,EAASgB,QAAQC,SAASC,GAAK,IACjC,KAGKC,EAAAA,EAAAA,KAAA,aAAWC,IAAKpB,EAAUqB,OAAQvB,EAAOwB,MAAO,GACzD,C","sources":["pages/Model.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nfunction Model() {\n  const { scene } = useGLTF('/hawk.glb'); // Ensure the path is correct\n  const modelRef = useRef();\n\n  useEffect(() => {\n    const dotShader = {\n      uniforms: {\n        dotColor: { value: new THREE.Color('#5ac8fa') } // Define the dot color\n      },\n      vertexShader: `\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      `,\n      fragmentShader: `\n        uniform vec3 dotColor;\n        varying vec2 vUv;\n        void main() {\n          float radius = 0.05; // Adjust the radius of the dots\n          vec2 grid = fract(vUv * 90.0); // Increase the frequency of the dots\n          float dist = length(grid - 0.5);\n          float alpha = 1.0 - smoothstep(radius, radius + 0.01, dist);\n          gl_FragColor = vec4(dotColor, alpha);\n        }\n      `,\n      transparent: true\n    };\n\n    scene.traverse((child) => {\n      if (child.isMesh) {\n        child.material = new THREE.ShaderMaterial(dotShader);\n      }\n    });\n  }, [scene]);\n\n  useFrame(() => {\n    if (modelRef.current) {\n      modelRef.current.rotation.y += 0.01; // Adjust the rotation speed as needed\n    }\n  });\n\n  return <primitive ref={modelRef} object={scene} scale={3} />; // Increase the scale value to make the model larger\n}\n\nexport default Model;"],"names":["scene","useGLTF","modelRef","useRef","useEffect","dotShader","uniforms","dotColor","value","THREE","vertexShader","fragmentShader","transparent","traverse","child","isMesh","material","useFrame","current","rotation","y","_jsx","ref","object","scale"],"sourceRoot":""}